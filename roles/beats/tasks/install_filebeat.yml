---

- shell: uname -s
  register: unames

- shell: uname -m
  register: unamem
    
- name: Install filebeat
  apt: 
    name:
      - "filebeat={{ es_version }}"
    state: present

- name: Fix directory permission
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    mode: u=rwX,g=rX,o-rwx
  loop:
    - "{{ filebeat_conf_dir }}"
    - "{{ filebeat_data_dir }}"
    - "{{ filebeat_log_dir }}"
    - "{{ filebeat_certs_dir }}"

- name: Copy elastic CA Pem filebeat
  copy:
    src: "{{ elasticsearch_local }}/http/elastic-certificates.pem"
    dest: "{{ filebeat_certs_dir }}/{{ elasticsearch_ca_pem }}"
    mode: 0644

- name: Copy elastic CA P12 filebeat
  copy:
    src: "{{ elasticsearch_local }}/http/elastic-certificates.p12"
    dest: "{{ filebeat_certs_dir }}/{{ elasticsearch_ca_p12 }}"
    mode: 0644
      
- name: Add file filebeat.yml
  template:
    src: filebeat/filebeat.j2
    dest: "{{ filebeat_conf_dir }}/filebeat.yml"
    mode: 0640
  notify:
    - reload filebeat

- name: Reload demon
  systemd:
    daemon_reload: yes
  notify:
    - Start filebeat
    - Enable filebeat

- name: filebeat elasticsearch
  block:
    - name: enable elasticsearch
      shell: 'filebeat modules enable elasticsearch'

    - name: add file /modules.d/elasticsearch.yml
      template:
        src: filebeat/elasticsearchmodules.j2
        dest: "{{ filebeat_path_module }}/elasticsearch.yml"
        mode: 0640
  when: inventory_hostname in groups['elastic']

- name: filebeat kibana
  block:
    - name: enable kibana
      shell: 'filebeat modules enable kibana'

    - name: add file /modules.d/kibanamodules.yml
      template:
        src: filebeat/kibanamodules.j2
        dest: "{{ filebeat_path_module }}/kibana.yml"
        mode: 0640
  when: inventory_hostname in groups['kibana']

- name: restart elasticsearch
  become: true
  shell: 'systemctl restart filebeat.service'
